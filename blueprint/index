---
ispreview: true
title: Integrate Genesys Cloud with an HRIS system to sync time-off requests and time-off balances from Genesys Cloud WFM
author: Vidas
indextype: blueprint
icon: blueprint
image: images/wfm-hris-business.png
category: 3
summary: |
  This Genesys Cloud Developer Blueprint integrates Genesys Cloud with an HRIS to retrieve employee time-off balances and provide that information in Genesys Cloud workforce management. When a time-off request is created or updated in Genesys Cloud workforce management, the integration inserts the request to the HRIS for tracking and verification against the employee's available balance.
---

This Genesys Cloud Developer Blueprint integrates Genesys Cloud with an HRIS to retrieve employee time-off balances and provide that information in Genesys Cloud workforce management. When a time-off request is created or updated in Genesys Cloud workforce management, the integration inserts the request to the HRIS for tracking and verification against the employee's available balance.

You configure and run this integration from within your Genesys Cloud organization. The solution uses Architect flows and data actions to call the HRIS APIs.

## About this beta 1 solution

This Genesys Cloud Developer Blueprint is a beta solution that is intended for testing. The blueprint explains how to configure Architect flows and data actions, so you can set them up and test them within your Genesys Cloud organization. Genesys Cloud Workforce Management will not be using integration functionality within the scope of beta 1.

## Solution components

* **Genesys Cloud CX** - A suite of Genesys cloud services for enterprise-grade communications, collaboration, and contact center management. This solution uses Genesys Cloud Architect, integrations and data actions to exchange time-off request and time-off balances with the HRIS.
* **3rd-party HRIS that supports JSON posts to a REST API endpoint** - The integration requires external API access from Genesys Cloud to the HRIS.

## Prerequisites

### Specialized knowledge

* Experience designing Architect flows  
* Experience using the Genesys Cloud Platform API
* Experience with REST API authentication
* Experience with JSON requests
* An understanding of how to use data actions
* Experience with the HRIS you will use with this solution, including its time-off features and its API

### HRIS account with API access

You need to configure an HRIS account to provide a limited and secured access to its data through JSON-based REST APIs.

The integration with Genesys Cloud workforce management needs sufficient API access to complete the following tasks:
  * Get a list of configured time-off types
  * Get a list of agents, for whom the integration will exchange data
  * Agent-unique key or ID within the HRIS
  * Map the email address of a user in the HRIS to the corresponding agent in Genesys Cloud
  * Retrieve the agent time-off balance on requested dates, for specific time-off types
  * Insert a time-off request for an agent
  * Modify and delete an agent time-off request that had been previously inserted

### Genesys Cloud account requirements

* One of the following Genesys Cloud licenses. For more information, see [Genesys Cloud Pricing](https://www.genesys.com/pricing) in the Genesys website.
  * Genesys Cloud CX 3
  * Genesys Cloud CX 1 WEM Upgrade 2
  * Genesys Cloud CX 2 WEM Upgrade 1

* The Master Admin role in Genesys Cloud. For more information, see [Roles and permissions overview](https://help.mypurecloud.com/?p=24360 "Opens the Roles and permissions overview article") in the Genesys Cloud Resource Center.

* The create integration, data action, and Architect flows, you need the appropriate Integrations and Architect permissions.
* To test Architect flows using the Genesys Cloud API, the user user needs OAuth permissions to set up the client.

For more information, see [Roles and permissions overview](https://help.mypurecloud.com/articles/about-roles-permissions/) in the Genesys Cloud Resource Center.

## Integration architecture

This solution is based on Architect workflows, which Genesys Cloud workforce management starts. The workflows use data actions to get or modify HRIS data. You can also  The workflow can also implement additional logic to manipulate HRIS data however you like.

Data actions use credentials that are stored in the integration's configuration to get authorization from the HRIS to access the specified route of the HRIS JSON REST API endpoint.

### Example Architect workflows

The integration provides example Architect workflows that are described in the following sections.

:::primary
**Note** You can update these workflows as needed for your specific business purposes.
:::

#### Synchronize agents

This workflow flow gets a list of all agent records, including their corresponding IDs/keys and email addresses, from the HRIS. Genesys Cloud workforce management requires this data in order to retrieve time-off balances and insert time-off requests for an agent into the HRIS.

This workflow is optional. Alternatively, you could manually enter an agent's ID and email address into Genesys Cloud workforce management.

#### Get time-off types

This workflow gets a list of all time-off types from the HRIS. Time-off type information consists of its ID/key, name, and an optional secondary ID.
Genesys Cloud workforce management passes this info back to the HRIS when it checks an agent's time-off balance or when it inserts or modifies a time-off request.

You can use the optional secondary ID when a single ID does not sufficiently identify a time-off type and its accrual rule in the HRIS. The optional secondary ID can also store any additional information about the time-off type.

If secondary id is returned, Genesys Cloud workforce management also passes it back to the HRIS when it checks an agent's time-off balance or when it inserts or modifies a time-off request.  

#### Check agent time-off balance

This workflow gets a list of the time-off balances for an agent. It retrieves balance information for multiple time-off types and multiple days.

#### Insert new time-off request

This workflow gets inserts a new time-off request into the HRIS. The request contains the following information:

* Agent ID
* A flag (true/false) to override the balance threshold
* Earliest time-off request date
* Latest time-off request date
* Average amount of time-off minutes (hours) per time-off day
* List of time-off days containing a date
* Amount of time-off minutes per day

:::primary
**Note**
Genesys Cloud workforce management propagates only approved time-off requests.
:::

If agents cannot exceed certain balance thresholds in the HRIS, and the flag to override the threshold is set to false, this workflow should check that threshold as well. In this case, it may need to invoke a separate data action.

#### Update existing time-off request

This workflow updates an existing time-off record in the HRIS when the corresponding information changes in WFM. The request contains the following information:

* Agent ID
* HRIS time-off request ID
* A flag (true/false) to override the balance threshold
* New time-off status
* Earliest time-off request date
* Latest time-off request date
* Average amount of time-off minutes (hours) per time-off day
* List of time-off days containing a date
* Amount of time-off minutes per day

:::primary
**Note** In the HRIS, the time-off request ID could change, depending on whether the HRIS updates an existing record or replaces it with a new record.
:::

## Example data actions

### One

### Two

### Three


### Four


### Five







## Implementation steps

### Clone the GitHub repository

:::primary
**Note**: Clone the GitHub repository only if you intend to use the example workflows and data actions, which are built to integrate with BambooHR HRIS. If you are integrating with another HRIS, either modify the example files or skip this step entirely and create your own workflows and data actions directly in your Genesys Cloud organization.  
:::

Clone the [wfm-hris-blueprint](https://github.com/GenesysCloudBlueprints/wfm-hris-blueprint) repository to your local machine. The examples folder contains the Architect workflows that you can modify as needed. For more information, see [Example Architect workflows](#Example-architect-workflows "Goes to the Example Architect workflows section").

### Create the integration

To enable communication from Genesys Cloud to your HRIS, add a web services data actions integration:

1. In Genesys Cloud, navigate to **Admin** > **Integrations** and install a **Web Services Data Actions** integration from Genesys Cloud. For more information, see [About the data actions integrations](https://help.mypurecloud.com/?p=209478 "Opens the data actions overview article") in the Genesys Cloud Resource Center.

   ![Install the Web Services Data Actions integration](images/integrations_add_list.png "Install the Web Services Data Actions integration")

    ![Rename the data action](images/integrations_install.png "Rename the data action")

2. Rename the web services data action and provide a short description.
3. Click **Configuration** > **Credentials** and then click **Configure**.

   ![Configure integration credentials](images/data_actions_credentials.png "Click Configure")

4. From the **Credential Type** list, select **User Defined (OAuth)** and configure the credentials access your HRIS.
5. Click **Save**.

### Create the data actions

Data actions make JSON API calls to the HRIS. Each data action is configured for a specific API route and exchanges specific HRIS data.

:::primary
**Note**
The following instructions illustrate generally how to use the example data actions that are provided with this blueprint solution. Your configuration steps will be specific to your HRIS.
:::

Five example data actions are provided with this solution. Repeat the following instructions for each of these data actions, or for the new data actions that you need to create for your HRIS.

1. In Genesys Cloud, navigate to **Admin** > **Integrations** > **Actions**.

2. Do one of the following:
  * To use an example data action, click **Import**.
  * To create a new data action, click **Add**.

  ![Create Action](/images/data_actions_create.png)

3. Select the data action file from your local copy of the repository.

4. For the Integration name, use the name of the [web services data actions integration that you created in the previous step](#create-the-integration 'Goes to the Create the integration section').

5. In the **Action Name** field, specify a meaningful name.
6. Click **Setup** and configure the **Contracts** and **Configuration** sections. Note that "Contracts" section has input and output contracts that are going to be used by your workflow.
7. Click **Publish Data Action**.

For more information, see [About the web services data actions integration](href='https://help.mypurecloud.com/?p=127163' "Goes to the About the web services data actions integration article") in the Genesys Cloud Resource Center.

### Create the Architect workflows

Five workflows need to be created, one of each type documented above.

- In Genesys Cloud, go to Admin > Architect
  - New Genesys Cloud Architect tab opens
- Choose "Workflow" type in "Flows" selector
![Use Workflow](/blueprint/images/architect_select_workflow.png)
- "Add" new flow
  - You may import an example, once an empty flow is created
![Import Workflow](/blueprint/images/architect_import_workflow.png)
- "Save" and "Publish" the flow, once it is completed

For more information about Architect and flows, use Architect online help. Also, Genesys Resource Center has an article about [working with workflows](https://help.mypurecloud.com/articles/work-with-workflows/)

## Test workflows with the Genesys Cloud API

Once workflows are saved and published, they can be tested using Genesys Cloud Public API calls.
'curl' tool can be used as a client to call API, but there are many other options

- First, the client needs to authenticate and get a bearer token to be able to call an API. Click the link for more information about [API client configuration, authentication and authorization](https://developer.genesys.cloud/authorization/platform-auth/use-authorization-code).
- Use API calls to view, execute flow and get flow execution results. See more information about API on [developer center](https://developer.genesys.cloud/devapps/api-explorer). Select "Architect" category.
  - GET /api/v2/flows/ - to check the configured flows
  - POST /api/v2/flows/executions - to pass input parameters and start flow execution
  - GET /api/v2/flows/executions/{flowExecutionId} - to check flow execution status and get results

## Additional resources
* wfm-hris-blueprint
